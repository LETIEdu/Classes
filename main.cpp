#include <iostream>
#include <memory.h>
#include "array.h"

using namespace std;

int main()
{
    // Создание через конструктор
    cout << "Create by constructor" << endl;
    Array a(5);
    // Обращение через функцию at реализующую
    // проверку допустимого значения индекса,
    // если ввести недопустимый индекс, сработает
    // assert в функции
    a.at(2) = 4;
    // Создание через конструктор копирования
    cout << "Create by copy constructor" << endl;
    Array b(a);
    // Обращение через оператор [] без проверки
    // допустимого значения индекса
    b[2] = 8;
    // Вызов оператора присваивания
    cout << "Call for assignment operator" << endl;
    b = b;
    cout << a.at(2) << " " << b.at(2) << endl;
    // Использование оператора вывода в поток
    cout << a << endl;
    cout << b << endl;

    /*
     * Без ключевого слова explicit данная
     * строчка была бы верной, т.к. в классе
     * присутствует конструктор создающий
     * объект из переменной типа int. В данном
     * случае произойдёт неявное преобразование
     * типов. Однако такое преобразование может
     * приводить к ошибкам и рекомендуется
     * использовать ключевое слово explicit для
     * запрета неявного приведения типа
     *
     * Array c = 6;
     *
     */

    return 0;
}
